/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vista;

import static Vista.PnlEmpleados.registro;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author mauri
 */
public class PnlEditarEmpleado extends javax.swing.JPanel {

    /**
     * Creates new form PnlEditarEmpleado
     */
    public PnlEditarEmpleado() {
        initComponents();
        PnlEmpleados.llenarCmb(cmbSucursalEmp);
        seleccionarCmb();
    }

    private void seleccionarCmb() {
        try {
            String comando = "SELECT * FROM trabaja WHERE idempleado = '" + registro.elementAt(0).toString() + "'";
            PreparedStatement pst = pnlInicioSesion.conn.getConnSin().prepareStatement(comando);
            ResultSet rs = pst.executeQuery();
            String valor = "";
            while (rs.next()) {
                valor = rs.getString(2);
            }
            cmbSucursalEmp.setSelectedItem(valor);
            System.out.println(valor);
        } catch (Exception ex) {
            Logger.getLogger(PnlEditarEmpleado.class.getName()).log(Level.SEVERE, null, ex);
            cmbSucursalEmp.setSelectedIndex(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        txtIDEmp = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtCedula = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        cmbSucursalEmp = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Empleado"));

        jLabel1.setText("Nombre");

        jLabel3.setText("Cédula");

        jLabel4.setText("ID");

        jLabel5.setText("Telefono");

        jLabel6.setText("Dirección");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel7.setText("Sucursal");

        cmbSucursalEmp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                            .addComponent(txtCedula, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDireccion)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(txtIDEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbSucursalEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(btnGuardar)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtIDEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(cmbSucursalEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        // se va a actualizar
        if (PnlEmpleados.estado) {
            
            try {
                System.out.println(PnlEmpleados.estado);

                String comando = "UPDATE empleado SET "
                        + "nombreempleado = ?, "
                        + "ciempleado = ?, "
                        + "telefonosempleado = ?,"
                        + "domicilioempleado = ? "
                        + "WHERE idempleado = ?";
                String nombre = txtNombre.getText().toUpperCase();
                String CIemp = txtCedula.getText().trim();
                String telefono = txtTelefono.getText().trim();
                String direccion = txtDireccion.getText().toUpperCase();
                PreparedStatement pst = pnlInicioSesion.conn.getConnSin().prepareStatement(comando);
                if (!nombre.isBlank() && !telefono.isBlank() && !CIemp.isBlank() && !direccion.isBlank() && cmbSucursalEmp.getSelectedIndex() != 0) {
                    pst.setString(5, txtIDEmp.getText());
                    pst.setString(1, nombre);
                    pst.setString(2, CIemp);
                    long tlf = Long.parseLong(telefono);
                    long ci = Long.parseLong(CIemp);
                    pst.setString(3, telefono);
                    pst.setString(4, direccion);

                    // Ejecutar la sentencia SQL
                    // Hacer commit de la transacción
                    //pnlInicioSesion.conn.getConnSin().commit();
                    System.out.println(cmbSucursalEmp.getItemAt(cmbSucursalEmp.getSelectedIndex()));
                    String cmd = "UPDATE trabaja SET numerosucur = ? WHERE idempleado = ?";
                    PreparedStatement pst2 = pnlInicioSesion.conn.getConnSin().prepareStatement(cmd);
                    pst2.setString(2, txtIDEmp.getText());
                    pst2.setString(1, cmbSucursalEmp.getItemAt(cmbSucursalEmp.getSelectedIndex()));

                    System.out.println(pst.executeUpdate());
                    pst2.executeUpdate();
                    System.out.println("Empleado actualizado exitosamente.");
                    JOptionPane.showMessageDialog(null, "Empleado actualizado exitosamente", "Transacción exitosa",
                            JOptionPane.INFORMATION_MESSAGE);
                    JPanel pnlTabla = new PnlEmpleados();
                    Inicio.agregarPanelDerecho(pnlTabla);
                } else {
                    JOptionPane.showMessageDialog(null, "Debe llenar todos los campos", "Error", JOptionPane.ERROR_MESSAGE);

                }
            } catch (SQLException ex) {
                Logger.getLogger(PnlEditarEmpleado.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            try {
                // Desactivar autocommit para manejar la transacción manualmente
                //pnlInicioSesion.conn.getConnSin().setAutoCommit(true);

                String nombre = txtNombre.getText().toUpperCase();
                String CIemp = txtCedula.getText().trim();
                String telefono = txtTelefono.getText().trim();
                String direccion = txtDireccion.getText().toUpperCase();
                String comando = "INSERT INTO empleado (idempleado, nombreempleado, ciempleado, telefonosempleado, domicilioempleado) "
                        + "VALUES (?, ?, ?, ?, ?)";

                PreparedStatement pst = pnlInicioSesion.conn.getConnSin().prepareStatement(comando);

                if (!nombre.isBlank() && !telefono.isBlank() && !CIemp.isBlank() && !direccion.isBlank() && cmbSucursalEmp.getSelectedIndex() != 0) {
                    pst.setString(1, txtIDEmp.getText());
                    pst.setString(2, nombre);
                    pst.setString(3, CIemp);
                    long tlf = Long.parseLong(telefono);
                    long ci = Long.parseLong(CIemp);
                    pst.setString(4, telefono);
                    pst.setString(5, direccion);

                    // Ejecutar la sentencia SQL
                    // Hacer commit de la transacción
                    //pnlInicioSesion.conn.getConnSin().commit();
                    System.out.println(cmbSucursalEmp.getItemAt(cmbSucursalEmp.getSelectedIndex()));
                    String cmd = "INSERT INTO trabaja (idempleado, numerosucur) VALUES (?,?)";
                    PreparedStatement pst2 = pnlInicioSesion.conn.getConnSin().prepareStatement(cmd);
                    pst2.setString(1, txtIDEmp.getText());
                    pst2.setString(2, cmbSucursalEmp.getItemAt(cmbSucursalEmp.getSelectedIndex()));

                    pst.executeUpdate();
                    pst2.executeUpdate();
                    System.out.println("Empleado insertado exitosamente.");
                    JOptionPane.showMessageDialog(null, "Empleado insertado exitosamente", "Transacción exitosa",
                            JOptionPane.INFORMATION_MESSAGE);
                    JPanel pnlTabla = new PnlEmpleados();
                    Inicio.agregarPanelDerecho(pnlTabla);
                } else {
                    JOptionPane.showMessageDialog(null, "Debe llenar todos los campos", "Error", JOptionPane.ERROR_MESSAGE);

                }

                // Restaurar el autocommit
                pnlInicioSesion.conn.getConnSin().setAutoCommit(true);

            } catch (Exception e) {
                try {
                    if (pnlInicioSesion.conn.getConnSin() != null) {
                        // Hacer rollback de la transacción en caso de error
                        pnlInicioSesion.conn.getConnSin().rollback();
                        JOptionPane.showMessageDialog(null, "Ocurrió un error y se deshizo la transacción", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (Exception rollbackException) {
                    //JOptionPane.showMessageDialog(null, "Error al intentar deshacer la transacción", "Error", JOptionPane.ERROR_MESSAGE);
                    System.out.println(rollbackException);
                }
                System.out.println(e);
            } finally {
                try {
                    if (pnlInicioSesion.conn.getConnSin() != null) {
                        // Asegurarse de restaurar el autocommit en el bloque finally
                        pnlInicioSesion.conn.getConnSin().setAutoCommit(true);
                    }
                } catch (Exception finalException) {
                    JOptionPane.showMessageDialog(null, "Error al restaurar el autocommit", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        JPanel pnlTabla = new PnlEmpleados();
        Inicio.agregarPanelDerecho(pnlTabla);
    }//GEN-LAST:event_btnCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<String> cmbSucursalEmp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    public static javax.swing.JTextField txtCedula;
    public static javax.swing.JTextField txtDireccion;
    public static javax.swing.JTextField txtIDEmp;
    public static javax.swing.JTextField txtNombre;
    public static javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
